package Java230103;

public class AccessModifier {
//접근제어자 정리
/*
 * 1. public 모든 접근을 허용
 * 2. protected 상속받은 클래스, 또는 같은 패키지 내에서 만 가능
 * 3. default 기본 제어자, 같은 패키지, 클래스 내부에서 사용 가능
 * 4. private 클래스 외부에서 접근 불가
 * 
 * 객체지향 프로그래밍의 특징
 * 1. 캡슐화 : 객체의 필드 ,메소드들을 하나로 묶고 은닉하여 외부에서 조회할 수 없도록 하여 사용자가 클라이언트에게 일방적으로 제공할 수 있음
 * 
 * 2. 상속 : 객체의 필드, 메소드을 자식(종속,서브) 클래스에게 상속하여 자식 클래스에서 사용할 수 있도록 함
 * 슈퍼클래스의 필드와 메소드를 하위 클래스에서도 사용 가능 할 수 있도록 해줌
 * 자바의 최상위 클래스는 Object입니다.
 * 
 * 3. 다형성 : 모양을 바꿀 수 있다. 같은 타입이지만 실행결과가 다양한 객체를 이용할 수 있는 성질
 * 
 */
}
